import { type NextRequest, NextResponse } from "next/server"

export async function POST(request: NextRequest) {
  try {
    const { prompt, platform, objective, tone = "professional" } = await request.json()

    if (!prompt) {
      return NextResponse.json({ error: "Prompt is required" }, { status: 400 })
    }

    // For demo purposes, return mock generated content
    // In production, you would integrate with OpenAI GPT-4 or similar
    const platformLimits = {
      linkedin: 3000,
      twitter: 280,
      instagram: 2200,
      facebook: 63206,
      tiktok: 150,
    }

    const sampleContent = {
      "Attirer des freelances": {
        linkedin: `ðŸš€ Freelances talentueux, cette opportunitÃ© est pour vous !

Nous recherchons des experts passionnÃ©s pour rejoindre notre Ã©quipe projet. Si vous excellez dans votre domaine et cherchez des missions stimulantes, parlons-en !

ðŸ’¼ Ce que nous offrons :
â€¢ Projets innovants et variÃ©s
â€¢ RÃ©munÃ©ration attractive
â€¢ FlexibilitÃ© totale
â€¢ Ã‰quipe bienveillante

PrÃªt(e) Ã  relever le dÃ©fi ? Contactez-nous en MP !

#Freelance #OpportunitÃ© #Recrutement`,
        twitter: `ðŸš€ Freelances talentueux recherchÃ©s !

âœ… Projets innovants
âœ… RÃ©munÃ©ration attractive  
âœ… FlexibilitÃ© totale
âœ… Ã‰quipe bienveillante

PrÃªt(e) ? MP ouvert ! 

#Freelance #OpportunitÃ©`,
        instagram: `ðŸš€ Appel aux freelances talentueux !

Rejoignez notre Ã©quipe pour des projets passionnants ðŸ’¼

Ce qu'on offre :
âœ¨ Projets variÃ©s et stimulants
âœ¨ RÃ©munÃ©ration compÃ©titive
âœ¨ FlexibilitÃ© maximale
âœ¨ Ambiance de travail top

Vous Ãªtes partant(e) ? Contactez-nous ! ðŸ“©

#Freelance #OpportunitÃ© #Ã‰quipe #Travail #Passion`,
      },
      "Post du lundi motivant": {
        linkedin: `ðŸ’ª Nouveau lundi, nouvelles possibilitÃ©s !

Cette semaine, fixez-vous un objectif qui vous fait vibrer. Peu importe sa taille, l'important c'est de commencer.

âœ¨ Rappel du jour :
â€¢ Chaque expert a Ã©tÃ© un dÃ©butant
â€¢ Chaque succÃ¨s a commencÃ© par un premier pas
â€¢ Chaque rÃªve mÃ©rite sa chance

Alors, quel sera votre premier pas aujourd'hui ?

Partagez vos objectifs de la semaine en commentaire ! ðŸ‘‡

#Motivation #Lundi #Objectifs #RÃ©ussite`,
        twitter: `ðŸ’ª Nouveau lundi, nouvelles possibilitÃ©s !

Cette semaine, quel objectif vous fait vibrer ?

âœ¨ Rappel :
â€¢ Chaque expert a Ã©tÃ© dÃ©butant
â€¢ Chaque succÃ¨s commence par un pas
â€¢ Chaque rÃªve mÃ©rite sa chance

Votre premier pas aujourd'hui ? ðŸ‘‡

#MondayMotivation`,
        instagram: `ðŸ’ª LUNDI = NOUVEAU DÃ‰PART ðŸ’ª

Cette semaine, on se fixe un objectif qui nous fait vibrer ! ðŸŽ¯

âœ¨ Petits rappels motivants :
â€¢ Tous les experts ont Ã©tÃ© dÃ©butants
â€¢ Chaque succÃ¨s commence par un premier pas
â€¢ Tous les rÃªves mÃ©ritent leur chance

Alors, c'est quoi votre premier pas aujourd'hui ? ðŸ‘‡

Partagez en commentaire, on se motive ensemble ! ðŸ”¥

#Motivation #Lundi #Objectifs #RÃ©ussite #Mindset #Inspiration`,
      },
    }

    // Get content based on objective and platform
    let generatedText = ""
    if (objective && sampleContent[objective as keyof typeof sampleContent]) {
      const objectiveContent = sampleContent[objective as keyof typeof sampleContent]
      generatedText =
        objectiveContent[platform as keyof typeof objectiveContent] ||
        objectiveContent.linkedin ||
        `Contenu gÃ©nÃ©rÃ© pour ${objective} sur ${platform}`
    } else {
      // Fallback generic content
      generatedText = `Contenu gÃ©nÃ©rÃ© pour "${prompt}" optimisÃ© pour ${platform}.

Ce post a Ã©tÃ© crÃ©Ã© automatiquement en tenant compte des meilleures pratiques de ${platform} et de votre objectif : ${objective || "engagement gÃ©nÃ©ral"}.

#IA #ContenuAutomatisÃ© #${platform.charAt(0).toUpperCase() + platform.slice(1)}`
    }

    // Trim content if it exceeds platform limits
    const limit = platformLimits[platform as keyof typeof platformLimits] || 3000
    if (generatedText.length > limit) {
      generatedText = generatedText.substring(0, limit - 3) + "..."
    }

    // Simulate API delay
    await new Promise((resolve) => setTimeout(resolve, 1500))

    return NextResponse.json({
      text: generatedText,
      platform,
      objective,
      characterCount: generatedText.length,
      maxCharacters: limit,
    })
  } catch (error) {
    console.error("Error generating text:", error)
    return NextResponse.json({ error: "Failed to generate text" }, { status: 500 })
  }
}
