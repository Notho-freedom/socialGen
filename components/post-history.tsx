"use client"

import { useState, useEffect } from "react"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Badge } from "@/components/ui/badge"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu"
import {
  Search,
  MoreHorizontal,
  Eye,
  Edit,
  Copy,
  Trash2,
  Calendar,
  Heart,
  MessageCircle,
  ExternalLink,
} from "lucide-react"
import { formatDistanceToNow } from "date-fns"
import { fr } from "date-fns/locale"
import type { Post } from "@/lib/supabase"

interface PostHistoryProps {
  userId?: string
}

const platformConfig = {
  linkedin: { name: "LinkedIn", color: "bg-blue-600", textColor: "text-blue-600" },
  twitter: { name: "Twitter/X", color: "bg-black", textColor: "text-black" },
  instagram: { name: "Instagram", color: "bg-pink-600", textColor: "text-pink-600" },
  facebook: { name: "Facebook", color: "bg-blue-500", textColor: "text-blue-500" },
  tiktok: { name: "TikTok", color: "bg-black", textColor: "text-black" },
}

const statusConfig = {
  draft: { label: "Brouillon", variant: "outline" as const },
  scheduled: { label: "Programm√©", variant: "default" as const },
  published: { label: "Publi√©", variant: "secondary" as const },
}

function PostCard({
  post,
  onEdit,
  onDelete,
  onDuplicate,
}: {
  post: Post
  onEdit: (post: Post) => void
  onDelete: (postId: string) => void
  onDuplicate: (post: Post) => void
}) {
  const platform = platformConfig[post.platform]
  const status = statusConfig[post.status]

  const mockMetrics = {
    views: Math.floor(Math.random() * 5000) + 100,
    likes: Math.floor(Math.random() * 200) + 10,
    comments: Math.floor(Math.random() * 50) + 2,
    shares: Math.floor(Math.random() * 30) + 1,
  }

  return (
    <Card className="hover:shadow-md transition-shadow">
      <CardHeader className="pb-3">
        <div className="flex items-start justify-between">
          <div className="flex items-center space-x-3">
            <div className={`w-3 h-3 rounded-full ${platform.color}`} />
            <div>
              <h3 className="font-medium text-sm">{post.title}</h3>
              <div className="flex items-center space-x-2 mt-1">
                <span className="text-xs text-muted-foreground">{platform.name}</span>
                <Badge variant={status.variant} className="text-xs">
                  {status.label}
                </Badge>
              </div>
            </div>
          </div>

          <DropdownMenu>
            <DropdownMenuTrigger asChild>
              <Button variant="ghost" size="sm">
                <MoreHorizontal className="h-4 w-4" />
              </Button>
            </DropdownMenuTrigger>
            <DropdownMenuContent align="end">
              <DropdownMenuItem onClick={() => onEdit(post)}>
                <Eye className="mr-2 h-4 w-4" />
                Voir
              </DropdownMenuItem>
              <DropdownMenuItem onClick={() => onEdit(post)}>
                <Edit className="mr-2 h-4 w-4" />
                Modifier
              </DropdownMenuItem>
              <DropdownMenuItem onClick={() => onDuplicate(post)}>
                <Copy className="mr-2 h-4 w-4" />
                Dupliquer
              </DropdownMenuItem>
              {post.status === "published" && (
                <DropdownMenuItem>
                  <ExternalLink className="mr-2 h-4 w-4" />
                  Ouvrir sur {platform.name}
                </DropdownMenuItem>
              )}
              <DropdownMenuSeparator />
              <DropdownMenuItem onClick={() => onDelete(post.id)} className="text-red-600">
                <Trash2 className="mr-2 h-4 w-4" />
                Supprimer
              </DropdownMenuItem>
            </DropdownMenuContent>
          </DropdownMenu>
        </div>
      </CardHeader>

      <CardContent className="pt-0">
        <p className="text-sm text-muted-foreground line-clamp-3 mb-3">{post.content}</p>

        {post.image_url && (
          <div className="mb-3">
            <img src={post.image_url || "/placeholder.svg"} alt="" className="w-full h-32 object-cover rounded-md" />
          </div>
        )}

        <div className="flex items-center justify-between text-xs text-muted-foreground">
          <div className="flex items-center space-x-1">
            <Calendar className="h-3 w-3" />
            <span>{formatDistanceToNow(new Date(post.created_at), { addSuffix: true, locale: fr })}</span>
          </div>

          {post.status === "published" && (
            <div className="flex items-center space-x-3">
              <div className="flex items-center space-x-1">
                <Eye className="h-3 w-3" />
                <span>{mockMetrics.views.toLocaleString()}</span>
              </div>
              <div className="flex items-center space-x-1">
                <Heart className="h-3 w-3" />
                <span>{mockMetrics.likes}</span>
              </div>
              <div className="flex items-center space-x-1">
                <MessageCircle className="h-3 w-3" />
                <span>{mockMetrics.comments}</span>
              </div>
            </div>
          )}
        </div>
      </CardContent>
    </Card>
  )
}

export function PostHistory({ userId = "demo-user" }: PostHistoryProps) {
  const [posts, setPosts] = useState<Post[]>([])
  const [loading, setLoading] = useState(true)
  const [searchQuery, setSearchQuery] = useState("")
  const [platformFilter, setPlatformFilter] = useState("all")
  const [statusFilter, setStatusFilter] = useState("all")

  // Mock data for demo
  useEffect(() => {
    const mockPosts: Post[] = [
      {
        id: "1",
        user_id: userId,
        title: "Conseils productivit√© pour entrepreneurs",
        content:
          "üöÄ 5 conseils pour booster votre productivit√© en tant qu'entrepreneur :\n\n1Ô∏è‚É£ Planifiez votre journ√©e la veille\n2Ô∏è‚É£ Utilisez la technique Pomodoro\n3Ô∏è‚É£ √âliminez les distractions\n4Ô∏è‚É£ D√©l√©guez les t√¢ches non-essentielles\n5Ô∏è‚É£ Prenez des pauses r√©guli√®res\n\nQuel est votre conseil pr√©f√©r√© ? üí¨\n\n#Productivit√© #Entrepreneur #Conseils",
        platform: "linkedin",
        status: "published",
        image_url: "/placeholder.svg?height=300&width=500&text=Productivity",
        prompt: "Cr√©er un post sur la productivit√© pour entrepreneurs",
        objective: "Conseils d'expert",
        created_at: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),
        updated_at: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),
      },
      {
        id: "2",
        user_id: userId,
        title: "Thread marketing digital 2024",
        content:
          "üßµ THREAD : Les 10 tendances marketing digital √† suivre en 2024\n\n1/ L'IA g√©n√©rative r√©volutionne la cr√©ation de contenu\n2/ Le marketing conversationnel explose\n3/ Les micro-influenceurs dominent\n\n[Thread de 10 tweets]",
        platform: "twitter",
        status: "published",
        prompt: "Thread sur les tendances marketing 2024",
        objective: "Tendances du secteur",
        created_at: new Date(Date.now() - 6 * 60 * 60 * 1000).toISOString(),
        updated_at: new Date(Date.now() - 6 * 60 * 60 * 1000).toISOString(),
      },
      {
        id: "3",
        user_id: userId,
        title: "Post motivant du lundi",
        content:
          "üí™ Nouveau lundi, nouvelles opportunit√©s !\n\nCette semaine, fixez-vous un objectif qui vous fait vibrer. Peu importe sa taille, l'important c'est de commencer.\n\n‚ú® Rappel du jour :\n‚Ä¢ Chaque expert a √©t√© un d√©butant\n‚Ä¢ Chaque succ√®s a commenc√© par un premier pas\n‚Ä¢ Chaque r√™ve m√©rite sa chance\n\nAlors, quel sera votre premier pas aujourd'hui ? üëá\n\n#Motivation #Lundi #Objectifs #R√©ussite",
        platform: "instagram",
        status: "scheduled",
        image_url: "/placeholder.svg?height=300&width=300&text=Monday+Motivation",
        prompt: "Post motivant pour le lundi",
        objective: "Post du lundi motivant",
        scheduled_at: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(),
        created_at: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),
        updated_at: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),
      },
      {
        id: "4",
        user_id: userId,
        title: "Pr√©sentation nouveau produit",
        content:
          "üéâ Grande nouvelle ! Notre dernier produit est enfin l√† !\n\nApr√®s des mois de d√©veloppement, nous sommes fiers de vous pr√©senter une solution qui va r√©volutionner votre quotidien.\n\nüåü Les points forts :\n‚Ä¢ Interface intuitive\n‚Ä¢ Performance optimis√©e\n‚Ä¢ S√©curit√© renforc√©e\n‚Ä¢ Support client 24/7\n\nD√©couvrez d√®s maintenant comment il peut transformer votre fa√ßon de travailler.\n\nLien en bio pour en savoir plus ! üëÜ",
        platform: "facebook",
        status: "draft",
        image_url: "/placeholder.svg?height=300&width=500&text=New+Product",
        prompt: "Pr√©senter le lancement d'un nouveau produit",
        objective: "Pr√©senter un nouveau produit",
        created_at: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(),
        updated_at: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),
      },
      {
        id: "5",
        user_id: userId,
        title: "Behind the scenes √©quipe",
        content:
          "üë• D√©couvrez les coulisses de notre √©quipe cr√©ative !\n\nAujourd'hui, on vous emm√®ne dans notre bureau pour vous montrer comment naissent nos id√©es les plus innovantes.\n\nDe la brainstorming session matinale au prototype final, chaque √©tape compte pour cr√©er des solutions qui vous ressemblent.\n\nMerci √† toute l'√©quipe pour cette √©nergie incroyable ! üôå\n\n#Team #BehindTheScenes #Innovation #Cr√©ativit√©",
        platform: "linkedin",
        status: "published",
        image_url: "/placeholder.svg?height=300&width=500&text=Team+Work",
        prompt: "Montrer les coulisses de l'√©quipe",
        objective: "Behind the scenes",
        published_at: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),
        created_at: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(),
        updated_at: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),
      },
    ]

    setTimeout(() => {
      setPosts(mockPosts)
      setLoading(false)
    }, 1000)
  }, [userId])

  const filteredPosts = posts.filter((post) => {
    const matchesSearch =
      post.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
      post.content.toLowerCase().includes(searchQuery.toLowerCase())
    const matchesPlatform = platformFilter === "all" || post.platform === platformFilter
    const matchesStatus = statusFilter === "all" || post.status === statusFilter

    return matchesSearch && matchesPlatform && matchesStatus
  })

  const handleEdit = (post: Post) => {
    console.log("Edit post:", post.id)
  }

  const handleDelete = (postId: string) => {
    setPosts(posts.filter((p) => p.id !== postId))
  }

  const handleDuplicate = (post: Post) => {
    const duplicatedPost: Post = {
      ...post,
      id: Date.now().toString(),
      title: `${post.title} (copie)`,
      status: "draft",
      created_at: new Date().toISOString(),
      updated_at: new Date().toISOString(),
    }
    setPosts([duplicatedPost, ...posts])
  }

  if (loading) {
    return (
      <Card>
        <CardHeader>
          <CardTitle>Historique des posts</CardTitle>
          <CardDescription>Chargement...</CardDescription>
        </CardHeader>
      </Card>
    )
  }

  return (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <CardTitle>Historique des posts</CardTitle>
          <CardDescription>G√©rez tous vos contenus cr√©√©s et publi√©s</CardDescription>
        </CardHeader>
        <CardContent>
          <div className="flex flex-col sm:flex-row gap-4">
            <div className="relative flex-1">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground" />
              <Input
                placeholder="Rechercher dans vos posts..."
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                className="pl-10"
              />
            </div>

            <Select value={platformFilter} onValueChange={setPlatformFilter}>
              <SelectTrigger className="w-full sm:w-[180px]">
                <SelectValue placeholder="Plateforme" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="all">Toutes les plateformes</SelectItem>
                <SelectItem value="linkedin">LinkedIn</SelectItem>
                <SelectItem value="twitter">Twitter/X</SelectItem>
                <SelectItem value="instagram">Instagram</SelectItem>
                <SelectItem value="facebook">Facebook</SelectItem>
                <SelectItem value="tiktok">TikTok</SelectItem>
              </SelectContent>
            </Select>

            <Select value={statusFilter} onValueChange={setStatusFilter}>
              <SelectTrigger className="w-full sm:w-[180px]">
                <SelectValue placeholder="Statut" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="all">Tous les statuts</SelectItem>
                <SelectItem value="draft">Brouillons</SelectItem>
                <SelectItem value="scheduled">Programm√©s</SelectItem>
                <SelectItem value="published">Publi√©s</SelectItem>
              </SelectContent>
            </Select>
          </div>
        </CardContent>
      </Card>

      {filteredPosts.length === 0 ? (
        <Card>
          <CardContent className="flex flex-col items-center justify-center py-12">
            <div className="text-center">
              <h3 className="text-lg font-medium">Aucun post trouv√©</h3>
              <p className="text-muted-foreground mt-1">
                {searchQuery || platformFilter !== "all" || statusFilter !== "all"
                  ? "Essayez de modifier vos filtres de recherche"
                  : "Commencez par cr√©er votre premier post"}
              </p>
              <Button className="mt-4">Cr√©er un nouveau post</Button>
            </div>
          </CardContent>
        </Card>
      ) : (
        <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
          {filteredPosts.map((post) => (
            <PostCard
              key={post.id}
              post={post}
              onEdit={handleEdit}
              onDelete={handleDelete}
              onDuplicate={handleDuplicate}
            />
          ))}
        </div>
      )}
    </div>
  )
}
